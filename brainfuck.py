import os
from parser import *

source = open("source", "r")
output = open("main.asm", "w")

opened=0

loop = []

#intialse file
output.write(";do not edit this file is automaticly generated\n")
output.write("section .text \n")
output.write("	global _start \n")
output.write("_start:\n")
output.write("	mov edx, x \n")

data=""
for line in source:
	line=line.strip()
	for char in line:
		if(char=='<'): 
			data+='<'
			output.write(f'	dec edx			;<\n')					#increments the pointer position
		
		elif(char=='>'): 
			data+='>'
			output.write(f'	inc edx			;>\n')					#decrements the pointer position
		
		elif(char=='+'): 
			data+='+'
			output.write(f'	mov ecx, [edx]			;+\n')
			output.write(f'	inc ecx\n')
			output.write(f'	mov [edx], ecx\n')
		
		elif(char=='-'): 
			data+='-'
			output.write(f'	mov ecx, [edx]			;-\n')
			output.write(f'	dec ecx\n')
			output.write(f'	mov [edx], ecx\n')
		
		elif(char=='.'): 
			data+='.'
			output.write("push edx			;.\n")
			output.write(f'	mov ebx, [edx]\n')
			output.write(f'	mov [temp], ebx\n')
			output.write("	add word [temp], '0'\n")
			output.write(f'	mov ecx, temp\n')
			output.write(f'	mov edx, 1\n')
			output.write(f'	mov ebx, 1\n')
			output.write(f'	mov eax, 4\n')
			output.write(f'	int 0x80\n')
			output.write(f'	pop edx\n')

		
		elif(char==','): 
			data+=','
			output.write("push edx			;,\n")
			output.write(f'	mov ecx, input\n')
			output.write(f'	mov edx, 1\n')
			output.write(f'	mov ebx, 5\n')
			output.write(f'	mov eax, 3\n')
			output.write(f'	int 0x80\n')
			output.write(f'	pop edx\n')
			#output.write(f'	mov ecx, input')
			output.write(f'	mov [edx], ecx\n')
		
		elif(char=='['): 
			output.write(f'.loop{str(opened)}: 				;[\n')
			loop.append("loop"+str(opened))
			data+='['
			opened+=1
		
		elif(char==']'): 
			output.write(f'	mov ecx, [edx]					;]\n')
			output.write(f'	cmp ecx, 00\n')
			output.write(f'	jz .con{loop[-1]}\n')
			output.write(f'	jmp .{loop[-1]}\n')
			output.write(f'.con{loop.pop()}:\n')
			data+=']'

#end file
output.write("	mov eax, 1\n")
output.write("	int 0x80\n")
output.write("section	.data\n")
output.write("	global x\n")
output.write("	x times 3000 db 0\n")
output.write("	arraylen equ($ -x)/4\n")
output.write("	zero db 0\n")
output.write("	msg db 'a', 0xa\n")
output.write(" temp db 0\n")
output.write("section	.bss\n")
output.write("input resb 5")


output

parser(data)

#os.system("make")